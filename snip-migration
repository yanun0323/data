# @prefix migration
# @description 

###############
#  migration  #
###############

migrate.env:
	@if [ ! -f Makefile.env ]; then \
		echo "MYSQL_SQL_PATH=./database/migration" > ./Makefile.env &&\
		echo "" >> ./Makefile.env &&\
		echo "DB_USER=root" >> ./Makefile.env &&\
		echo "DB_PASSWORD=root" >> ./Makefile.env &&\
		echo "DB_HOST=localhost" >> ./Makefile.env &&\
		echo "DB_PORT=3306" >> ./Makefile.env &&\
		echo "DB_NAME=database" >> ./Makefile.env; \
	fi

migrate.new:
	goose sqlite -dir=${MYSQL_SQL_PATH} . create . sql

migrate.validate:
	goose -dir=${MYSQL_SQL_PATH} validate

migrate.up:
	goose mysql "${DB_USER}:${DB_PASSWORD}@tcp(${DB_HOST}:${DB_PORT})/$(DB_NAME)?charset=utf8&parseTime=True&loc=Local" -dir=${MYSQL_SQL_PATH} up

migrate.down:
	goose mysql "${DB_USER}:${DB_PASSWORD}@tcp(${DB_HOST}:${DB_PORT})/$(DB_NAME)?charset=utf8&parseTime=True&loc=Local" -dir=${MYSQL_SQL_PATH} reset 